#!/bin/bash
DEFIANT_BACKEND=/home/ali/projects/backend
DEFIANT_FRONTEND=/home/ali/projects/frontend

# Repo names of frontend projects
frontendProjects[0]=defiant
frontendProjects[1]=defiant-test

# Repo names of backend projects
backendProjects[0]=slor
backendProjects[1]=middle-tier
backendProjects[2]=file-service
backendProjects[3]=prism-warranty
backendProjects[4]=prism-live-stream
# Jars Paths
declare -A backendProjectJars
backendProjectJars[slor]=target/prism-support-2.0.0-SNAPSHOT.jar
backendProjectJars[middle-tier]=prism/target/prism-2.4.0-SNAPSHOT.jar
backendProjectJars[file-service]=build/libs/file-service-0.0.1-SNAPSHOT.jar
backendProjectJars[prism-warranty]=target/prism-warranty-2.4.0-SNAPSHOT.jar
backendProjectJars[prism-live-stream]=target/prism-live-stream-1.0-SNAPSHOT.jar

run_java_project() {
  if [[ "${backendProjects[@]}" =~ "$1" ]]; then
    cd $DEFIANT_BACKEND/$1
    CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
    if [[ $2 -eq 11 ]]; then
      print_title_header "$1 ($CURRENT_BRANCH) (Java 11)"
      java -jar ${backendProjectJars[$1]}
    else
      print_title_header "$1 ($CURRENT_BRANCH) (Java 8)"
      java8 -jar -Xmx1G ${backendProjectJars[$1]}
    fi
  elif [[ "${frontendProjects[@]}" =~ "$1" ]]; then
    cd $DEFIANT_FRONTEND/$1
    CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
    print_title_header "$1 ($CURRENT_BRANCH)"
    code $DEFIANT_FRONTEND/$1
    yarn serve
  else
    echo "Invalid Argument Provided '$1', Valid values are (${backendProjects[@]})"
  fi
}

if [ -z "$1" ]; then
  for project in "${!backendProjects[@]}"; do
    gnome-terminal --working-directory="$DEFIANT_BACKEND/${backendProjects[$project]}" \
      --tab -- bash -c "\
      sleep 0.1; \
      print_title_header '${backendProjects[$project]} ($(git --git-dir="$DEFIANT_BACKEND/${backendProjects[$project]}/.git" rev-parse --abbrev-ref HEAD))';  \
      java -jar ${backendProjectJars[${backendProjects[$project]}]}; \
      exec bash"
  done
else
  run_java_project $1 $2
fi
